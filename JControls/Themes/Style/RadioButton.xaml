<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:assist="clr-namespace:JControls.AttachedProperty"
                    xmlns:local="clr-namespace:JControls.Themes.Style">
    <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F" />
    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RadioButton.Style1" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="#4d4d4d" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#b8b8b8" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="33" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border SnapsToDevicePixels="False" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="#3378F6" />
                            <Setter Property="BorderBrush" Value="#3378F6" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#e0e0e0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButton.Style2" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="assist:ForegroundAssist.Foreground" Value="White" />
        <Setter Property="Background" Value="White" />
        <Setter Property="assist:BackgroundAP.Background" Value="#3D8BFF" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="assist:BorderThicknessAssist.BorderThickness" Value="0" />
        <Setter Property="Width" Value="69" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Border SnapsToDevicePixels="False" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        </Border>
                        <Border x:Name="IsCheckedBorder"
                            SnapsToDevicePixels="False" CornerRadius="0" Visibility="Collapsed"
                                BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(assist:BorderBrushAssist.BorderBrush)}"
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(assist:BackgroundAP.Background)}"
                                BorderThickness="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(assist:BorderThicknessAssist.BorderThickness)}">
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="IsCheckedBorder" />
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#e0e0e0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButton.RightTop.Icon.Style3" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="assist:ForegroundAssist.Foreground" Value="White" />
        <Setter Property="Background" Value="White" />
        <Setter Property="assist:BackgroundAP.Background" Value="#3D8BFF" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="assist:BorderThicknessAssist.BorderThickness" Value="0" />
        <Setter Property="Width" Value="90" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="assist:ControlAttachProperty.IconTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <Border Width="15" Height="15" CornerRadius="9" x:Name="bd" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=RadioButton},Path=(assist:BackgroundAP.Background)}" VerticalAlignment="Center"></Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type RadioButton}}}" Value="true">
                            <Setter Property="Background" TargetName="bd" Value="White" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Border SnapsToDevicePixels="False" CornerRadius="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        </Border>
                        <Border x:Name="IsCheckedBorder"
                            SnapsToDevicePixels="False" CornerRadius="0" Visibility="Collapsed"
                                BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(assist:BorderBrushAssist.BorderBrush)}"
                                Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(assist:BackgroundAP.Background)}"
                                BorderThickness="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(assist:BorderThicknessAssist.BorderThickness)}">
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <!--用户头像区域-->
                            <ContentControl x:Name="UserIcon"
                                            VerticalAlignment="Center" Margin="0 0 3 0"
                                            Template="{TemplateBinding assist:ControlAttachProperty.IconTemplate}"
                                            Focusable="False" />
                            <ContentPresenter  RecognizesAccessKey="True" />
                            <Border Width="21" Height="21" Name="bd" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(assist:BackgroundAP.Background)}" CornerRadius="12" Margin="-1 -12 1 12">
                                <TextBlock HorizontalAlignment="Center" Name="tb" FontSize="13" VerticalAlignment="Center" Foreground="White">1</TextBlock>
                            </Border>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="IsCheckedBorder" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" TargetName="bd" Value="White" />
                            <Setter Property="Foreground" TargetName="tb" Value="#3D8BFF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="#e0e0e0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>